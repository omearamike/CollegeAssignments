#BlueJ class context
comment0.params=
comment0.target=DeliveryVehicleController()
comment1.params=
comment1.target=java.util.ArrayList\ getAllSavedVehicles()
comment1.text=\n\ Will\ interact\ with\ the\ VehicleFileParser\ Class\ \n\ Will\ call\ the\ getVehiclesFromFile\ method\ to\ retreive\ all\ vehcile\ objects\ from\ the\ text\ file\n
comment10.params=vehicleToUpdate
comment10.target=java.lang.String\ updateDeliveryVehicle(DeliveryVehicle)
comment10.text=\n\ \ \ Will\ update\ a\ vehicle\ with\ the\ milescovered\ and\ deliverys\ Made\n\ \ \ @vehicleToUpdate\ will\ require\ the\ vehicle\ object\ to\ be\ updated\ to\ be\ passed\ in\n
comment11.params=registrationNumber
comment11.target=java.lang.String\ deleteDeliveryVehicle(java.lang.String)
comment2.params=
comment2.target=java.util.ArrayList\ getVehiclesList()
comment2.text=\n\ Will\ return\ the\ current\ _vehcileList\n\ \n
comment3.params=
comment3.target=void\ saveAllVehicles()
comment3.text=\n\ Will\ interact\ with\ the\ VehicleFileParser\ Class\ \n\ Will\ call\ the\ saveAllVehiclesToFile\ method\ to\ save\ the\ the\ _vehicleList\ to\ the\ text\ File\n\ \n
comment4.params=newVehicle
comment4.target=void\ addDeliveryVehicle(DeliveryVehicle)
comment4.text=\n\ Will\ add\ the\ new\ vehicle\ to\ the\ _vehicleList\ Array\ List\n\ \n\ \ \ @newVehicle\ Will\ take\ in\ a\ vehicle\ \n
comment5.params=registrationNumber\ engineSize\ daysInService\ milesCovered\ deliveriesMade
comment5.target=void\ addCar(java.lang.String,\ int,\ int,\ double,\ int)
comment5.text=\n\ This\ method\ will\ interact\ with\ the\ DeliveryCar\ Class\ to\ create\ a\ new\ Car\ Object\n\ It\ will\ then\ add\ the\ vehicle\ to\ the\ _vehicleList\ ArrayList\n\ \n\ \ \ @param\ all\ necessary\ params\ to\ create\ a\ new\ Car\ Object\n
comment6.params=registrationNumber\ engineSize\ daysInService\ milesCovered\ deliveriesMade
comment6.target=void\ addBike(java.lang.String,\ int,\ int,\ double,\ int)
comment6.text=\n\ This\ method\ will\ interact\ with\ the\ DeliveryBike\ Class\ to\ create\ a\ new\ Bike\ Object\n\ It\ will\ then\ add\ the\ vehicle\ to\ the\ _vehicleList\ ArrayList\n\ \n\ \ \ @param\ all\ necessary\ params\ to\ create\ a\ new\ Bike\ Object\n
comment7.params=registrationNumber\ engineSize\ daysInService\ milesCovered\ deliveriesMade
comment7.target=void\ addScooter(java.lang.String,\ int,\ int,\ double,\ int)
comment7.text=\n\ This\ method\ will\ interact\ with\ the\ DeliveryScooter\ Class\ to\ create\ a\ new\ Scooter\n\ It\ will\ then\ add\ the\ vehicle\ to\ the\ _vehicleList\ ArrayList\n\ \n\ \ \ @param\ all\ necessary\ params\ to\ create\ a\ new\ Scooter\ Object\n
comment8.params=
comment8.target=void\ testPrintArrayList()
comment8.text=\n\ Test\ to\ check\ the\ contents\ of\ the\ _vehicleList\ ArrayList\ at\ any\ point\ \n\ \n
comment9.params=registrationNumber
comment9.target=DeliveryVehicle\ getDeliveryVehicle(java.lang.String)
comment9.text=\n\ \ Will\ Return\ a\ vehicle\ object\ based\ on\ its\ registration\ number\n\ \ \ @registrationNumber\ Reg\ Number\ to\ search\ for\n
numComments=12
